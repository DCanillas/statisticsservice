version: '3'
services:

  product-service:
    container_name: "product-service"
    image: product-service.jar
    build:
      context: "${PRODUCT_CONTEXT}"
      dockerfile: "Dockerfile"
    ports:
      - "8080:8080"
    networks:
      - spring-net
    environment:
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_USER: root
      MYSQL_PASSWORD: 1234
      EUREKA_HOST: discovery-service
      EUREKA_PORT: 8761
      KAFKA_HOST: kafka
      KAFKA_PORT: 9092

  recommendation-service:
    container_name: "recommendation-service"
    image: recommendation-service.jar
    build:
      context: "${RECOMMENDATION_CONTEXT}"
      dockerfile: "Dockerfile"
    ports:
      - "9090:9090"
    networks:
      - spring-net
    environment:
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_USER: root
      MYSQL_PASSWORD: 1234
      EUREKA_HOST: discovery-service
      EUREKA_PORT: 8761
      KAFKA_HOST: kafka
      KAFKA_PORT: 9092

  gateway-service:
    container_name: "gateway-service"
    image: gateway-service.jar
    build:
      context: "${GATEWAY_CONTEXT}"
      dockerfile: "Dockerfile"
    ports:
      - "9000:9000"
    networks:
      - spring-net
    environment:
      EUREKA_HOST: discovery-service
      EUREKA_PORT: 8761
    depends_on:
      - product-service
      - recommendation-service

  statistics-service:
    container_name: "statistics-service"
    image: statistics-service.jar
    build:
      context: "${STATISTICS_CONTEXT}"
      dockerfile: "Dockerfile"
    ports:
      - "7000:7000"
    networks:
      - spring-net
    environment:
      KAFKA_HOST: kafka
      KAFKA_PORT: 9092
      MONGODB_USERNAME: root
      MONGODB_PASSWORD: 1234
      MONGODB_DATABASE: log_db
      MONGODB_PORT: 27017
      MONGODB_HOST: mongo

networks:
  spring-net:
    external: true